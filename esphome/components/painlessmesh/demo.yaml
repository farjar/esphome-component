external_components:
  - source: github://your-repo/esphome-painlessmesh@main

painlessmesh:
  ssid: "HomeMeshNetwork"
  password: !secret mesh_password
  port: 5555
  on_message:
    - message: "STATUS"
      then:
        - lambda: |-
            id(mesh_sender).send_message(x, "STATUS:OK");
    - then:
        - logger.log: 
            format: "Received general message: %s from %u"
            args: ["message", "from"]

# 发送消息服务
api:
  services:
    - service: send_mesh_message
      variables:
        target: int
        message: string
      then:
        - painlessmesh.send:
            node_id: !lambda 'return target;'
            message: !lambda 'return message;'

# 定义JSON消息接收器
lambda: |-
  auto receiver = id(mesh_component)->make_typed_receiver<JsonObject>();
  receiver->set_parser([](const std::string &msg, JsonObject &obj) {
    DynamicJsonDocument doc(256);
    deserializeJson(doc, msg);
    obj = doc.as<JsonObject>();
    return !obj.isNull();
  });
  receiver->add_handler([](uint32_t from, const JsonObject &data) {
    id(sensor).publish_state(data["value"]);
  });

# 自动化触发
on_message:
  - message: "{\"type\":\"status\"}"
    then:
      - logger.log: "Received status update"
      
# 自动化示例
automation:
  - trigger:
      platform: time
      at: "08:00:00"
    then:
      - painlessmesh.send:
          broadcast: true
          message: "MORNING_ANNOUNCE"
